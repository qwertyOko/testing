'use client';
import { useEffect, useState } from 'react';
import { useRouter } from "next/navigation";
import styles from './auth.module.css';
import type { UserOut} from '../../types/User';
import Image from 'next/image';

interface FastAPIError {
  loc?: (string | number)[];
  msg: string;
  type?: string;
}

export default function AuthPage() {
  const router = useRouter();
  const [activeTab, setActiveTab] = useState<'register' | 'login'>('login');
  const [loading, setLoading] = useState(true);
  const [forgot, setForgot] = useState(false);
  const [error, setError] = useState<string | null>(null); // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  const [login, setLogin] = useState('');
  const [password, setPassword] = useState('');
  const [user, setUser] = useState<UserOut | null>(null);

  useEffect(() => {
    const timer = setTimeout(() => setLoading(false), 3500);
    return () => clearTimeout(timer);
  }, []);

  if (loading) {
    return (
      <div className={styles.loadingRoot}>
        <style>{`
          @keyframes spin {
            0% { transform: rotate(0deg);}
            100% { transform: rotate(360deg);}
          }
          @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px);}
            to { opacity: 1; transform: translateY(0);}
          }
        `}</style>
        <div className={styles.loadingCard}>
          <div className={styles.spinner} />
          <span className={styles.loadingText}>
            –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∏–∫—Å–µ–ª–∏... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –≤—ã–∫–ª—é—á–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç! üöÄüß†
          </span>
        </div>
      </div>
    );
  }

  // –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
  if (error) {
    return (
      <div className={styles.root}>
        <div className={styles.card} style={{ alignItems: "center", color: "#d32f2f", paddingTop: 40, paddingBottom: 40 }}>
          <div style={{ fontSize: 72, marginBottom: 12, animation: "shake 0.7s" }}>üö®</div>
          <h2 style={{ marginBottom: 8, fontWeight: 800, fontSize: 28, letterSpacing: 1 }}>
            –û–π, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫!
          </h2>
          <div style={{ marginBottom: 18, fontSize: 17, color: "#b71c1c", textAlign: "center" }}>
            {error}
          </div>
          <div style={{
            background: "#fff3e0",
            color: "#ff9800",
            borderRadius: 8,
            padding: "10px 18px",
            marginBottom: 18,
            fontSize: 15,
            display: "flex",
            alignItems: "center",
            gap: 8,
            boxShadow: "0 2px 8px #ff980033"
          }}>
            <span style={{ fontSize: 22 }}>üí°</span>
            –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∞–±–æ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.
          </div>
          <button
            className={styles.submitBtn}
            style={{ background: "#2196f3", minWidth: 180 }}
            onClick={() => setError(null)}
          >
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
          </button>
          <style>{`
            @keyframes shake {
              0% { transform: translateX(0);}
              20% { transform: translateX(-8px);}
              40% { transform: translateX(8px);}
              60% { transform: translateX(-6px);}
              80% { transform: translateX(6px);}
              100% { transform: translateX(0);}
            }
          `}</style>
        </div>
      </div>
    );
  }
// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  // if (user) { 
  //   
  //   return (
  //     <div className={styles.root}>
  //       <div className={styles.card} style={{ alignItems: "center", paddingTop: 40, paddingBottom: 40 }}>
  //         <div style={{ fontSize: 48, marginBottom: 12 }}>üëã</div>
  //         <h2 style={{ marginBottom: 8, fontWeight: 800, fontSize: 24 }}>
  //           –í—ñ—Ç–∞—î–º–æ, {user.login}!
  //         </h2>
  //         <div style={{ marginBottom: 18, fontSize: 16 }}>
  //           –í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫ <b>{user.role}</b>. <br />
  //           –ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ: {new Date(user.registered_at).toLocaleString()}
  //         </div>
  //       </div>
  //     </div>
  //   );
  // }

  async function handleAuth(event: React.FormEvent<HTMLFormElement>): Promise<void> {
    event.preventDefault();
    setError(null);

    if (!login.trim() || !password.trim()) {
      setError("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è.");
      return;
    }

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã FastAPI: /auth/login –∏ /auth/register
      const endpoint = `https://api.alluresallol.com/auth/${activeTab}`;
      const payload = { login, password };

      const res = await fetch(endpoint, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      });

      const data = await res.json().catch(() => ({}));

      if (!res.ok) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –æ—à–∏–±–∫—É –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        const errorMessage = Array.isArray(data?.detail)
          ? (data.detail as FastAPIError[]).map(err => err.msg).join('; ')
          : typeof data?.detail === 'string'
            ? data.detail
            : data?.msg || '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.';
        setError(errorMessage);
        return;
      }

      if (activeTab === 'login') {
        if (data.access_token) {
          localStorage.setItem('token', data.access_token);
        }
        setUser({
          id: data.id || 0,
          login: data.login,
          role: data.role,
          registered_at: data.registered_at,
          is_blocked: data.is_blocked ?? false
        });
      } else {
        setUser({
          id: data.id,
          login: data.login,
          role: data.role,
          registered_at: data.registered_at,
          is_blocked: data.is_blocked
        });
      }

      setLogin('');
      setPassword('');
      router.push('/');
    } catch (err: unknown) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ:', err);
      if (err instanceof Error) {
        setError(err.message);
      } else {
        setError('–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞');
      }
    }
  }

  return (
    <div className={styles.root}>
      <div className={styles.card}>
        {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ –æ—à–∏–±–∫–∏
        <button
          className={styles.submitBtn}
          style={{ marginBottom: 16, background: "#d32f2f" }}
          onClick={() => setError("–¢–µ—Å—Ç–æ–≤–∞ –ø–æ–º–∏–ª–∫–∞! –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫.")}
        >
          –í—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É (—Ç–µ—Å—Ç)
        </button> */}
        {!forgot ? (
          <>
            <div className={styles.tabs}>
              <button
                className={`${styles.tab} ${activeTab === 'register' ? styles.active : ''}`}
                onClick={() => setActiveTab('register')}
                type="button"
              >
                –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è
              </button>
              <button
                className={`${styles.tab} ${activeTab === 'login' ? styles.active : ''}`}
                onClick={() => setActiveTab('login')}
                type="button"
              >
                –£–≤—ñ–π—Ç–∏
              </button>
            </div>
          <form className={styles.form} onSubmit={handleAuth}>
            <h2 className={styles.title}>
              {activeTab === 'register' ? '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è' : '–£–≤—ñ–π—Ç–∏'}
            </h2>
            <input
              className={styles.input}
              type="text"
              placeholder="–õ–æ–≥—ñ–Ω"
              value={login}
              onChange={e => setLogin(e.target.value)}
              required
            />
            <div className={styles.inputRow}>
              <input
                className={styles.input}
                type="password"
                placeholder="–ü–∞—Ä–æ–ª—å"
                value={password}
                onChange={e => setPassword(e.target.value)}
                required
              />
              <a
                href="#"
                className={styles.forgot}
                onClick={e => {
                  e.preventDefault();
                  setForgot(true);
                }}
              >
                –ó–∞–±—É–ª–∏ –ø–∞—Ä–æ–ª—å?
              </a>
            </div>
            <button type="button" className={styles.googleBtn}>
              –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –∑ Google
              <Image
                src="https://www.svgrepo.com/show/475656/google-color.svg"
                alt="Google"
                width={22}
                height={22}
                className={styles.googleIcon}
              />
            </button>
            <div className={styles.info}>
              <p>{`–£–≤—ñ–π—à–æ–≤—à–∏ –≤ —Å–∏—Å—Ç–µ–º—É, –≤–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—è –∑ '–£–º–æ–≤–∞–º–∏‚Ä¶'`}</p>
              <a
                href="https://www.privacypolicies.com/live/97b147a3-48dc-4d1e-8ee3-ba19d17f27f2"
                target="_blank"
                rel="noopener noreferrer"
              >
                –£–º–æ–≤–∞–º–∏ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥–∏ —Ç–∞ –ü–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ
              </a>
            </div>
            <button type="submit" className={styles.submitBtn}>
              {activeTab === 'register' ? '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è' : '–£–≤—ñ–π—Ç–∏'}
            </button>
          </form>
          <div className={styles.bottomText}>
            {activeTab === 'register' ? (
              <>
                –í–∂–µ –º–∞—î—Ç–µ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å?
                <a
                  href="#"
                  className={styles.registerLink}
                  onClick={e => {
                    e.preventDefault();
                    setActiveTab('login');
                  }}
                >
                  –£–≤—ñ–π—Ç–∏
                </a>
              </>
            ) : (
              <>
                –ü–æ—Ç—Ä—ñ–±–µ–Ω –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å?
                <a
                  href="#"
                  className={styles.registerLink}
                  onClick={e => {
                    e.preventDefault();
                    setActiveTab('register');
                  }}
                >
                  –ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è
                </a>
              </>
            )}
          </div>
        </>
      ) : (
        <form className={styles.form} style={{ minWidth: 280 }}>
          <h2 className={styles.title} style={{ textAlign: 'center' }}>
            –°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å
          </h2>
          <div style={{ textAlign: 'center', marginBottom: 16 }}>
            <p>{`–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó –ø–æ—à—Ç–∏, –ø–æ–≤'—è–∑–∞–Ω—É –∑ –≤–∞—à–∏–º –æ–±–ª—ñ–∫–æ–≤–∏–º –∑–∞–ø–∏—Å–æ–º.`}</p>
          </div>
          <input
            className={styles.input}
            type="email"
            placeholder="–ê–¥—Ä–µ—Å–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó –ø–æ—à—Ç–∏"
          />
          <button type="submit" className={styles.submitBtn}>
            –°–∫–∏–Ω—É—Ç–∏ –ø–∞—Ä–æ–ª—å
          </button>
          <div className={styles.bottomText}>
            <a
              href="#"
              className={styles.registerLink}
              onClick={e => {
                e.preventDefault();
                setForgot(false);
              }}
            >
              –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –≤—Ö–æ–¥—É
            </a>
          </div>
        </form>
      )}
    </div>
  </div>
);
}